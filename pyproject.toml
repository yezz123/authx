[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme>=22.5.0"]
build-backend = "hatchling.build"

[project]
name = "authx"
description = "Ready to use and customizable Authentications and Oauth2 management for FastAPI"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]
keywords = [
    "FastAPI",
    "Authentication",
    "Oauth2",
    "Pydantic",
    "JWT",
    "Cookie"
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    # Update the following list as the project matures
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed",
]

dependencies = [
    "fastapi >=0.111.0",
    "pyjwt[crypto] >=2.6.0,<3.0.0",
    "pydantic >=1.7.4,!=1.8,!=1.8.1,<3.0.0",
    "pydantic-settings >=2.1.0",
    "python-dateutil>=2.8,<3.0.0",
    "pytz>=2023.3,<2026.0",
    "python-jose>=3.3.0,<4.0.0",
    "itsdangerous>=2.2.0,<3.0.0",
]

dynamic = ["version"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
test = [
    "pytest>=8.3.2",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-pretty>=1.2.0",
    "coverage[toml]>=7.6.1",
    "dirty-equals>=0.7.1",
    "httpx",
    "requests",
    "SQLAlchemy",
    "itsdangerous",
    "websockets",
    "freezegun",
    "async-asgi-testclient",
]

lint = [
    "pre-commit",
    "mypy>=0.910",
    "black",
    "pyupgrade",
    "ruff>=0.7.4",
    "types-python-dateutil",
    "types-pytz>=2024.1.0.20240417",
    "codespell",
    "annotated-types>=0.7.0",
]

docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.47",
    "mkdocstrings>=0.27.0",
    "mkdocstrings-python>=1.12.2",
    "cairosvg>=2.7.1",
    "mdx-include>=1.4.2",
    "pymdown-extensions>=10.12",
    "typer>=0.14.0",
    "httpx>=0.28.0",
    "jinja2>=3.1.4",
    "markdown-include>=0.8.1",
    "pillow>=11.0.0",
    "pyyaml>=6.0.2",
    "mkdocs-git-committers-plugin-2>=2.4.1",
    "mkdocs-git-revision-date-localized-plugin>=1.3.0",
    "mkdocs-markdownextradata-plugin>=0.2.6",
    "mkdocs-mermaid2-plugin>=1.2.1",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-rss-plugin>=1.16.0",
    "termynal>=0.12.0",
    "griffe-typingdoc>=0.2.7",
    "urllib3==1.26.15",
    "authx-extra @ git+https://github.com/yezz123/authx-extra.git@main"
]

extra = [
    { include-group = "test" },
    { include-group = "lint" },
    { include-group = "docs" },
]

[project.urls]
Homepage = "https://github.com/yezz123/authx"
Documentation = "https://authx.yezz.me/"
Funding = 'https://github.com/sponsors/yezz123'
Source = 'https://github.com/yezz123/authx'
Changelog = 'https://authx.yezz.me/release/'

[tool.hatch.version]
path = "authx/__init__.py"

[tool.hatch.build.targets.sdist]
# limit which files are included in the sdist (.tar.gz) asset,
# to exclude unnecessary files and directories from the distribution
include = [
    '/README.md',
    '/docs/release.md',
    '/scripts',
    '/authx',
    '/tests',
]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = 'text/markdown'
# construct the PyPI readme from README.md and HISTORY.md
fragments = [
    {path = "README.md"},
    {text = "\n## Changelog\n\n"},
    {path = "docs/release.md", pattern = "(.+?)<!-- package description limit -->"},
    {text = "\n... see [here](https://authx.yezz.me/release/#100b0) for earlier changes.\n"},
]
# convert GitHuB issue/PR numbers and handles to links
substitutions = [
    {pattern = '(\s+)#(\d+)', replacement = '\1[#\2](https://github.com/yezz123/authx/issues/\2)'},
    {pattern = '(\s+)@([\w\-]+)', replacement = '\1[@\2](https://github.com/\2)'},
    {pattern = '@@', replacement = '@'},
]

[tool.ruff]
line-length = 120
target-version = 'py39'

[tool.ruff.lint]
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }
select = [
    'F',      # Pyflakes
    'E',      # pycodestyle (Error)
    'I',      # isort
    'D',      # pydocstyle
    'UP',     # pyupgrade
    'YTT',    # flake8-2020
    'B',      # flake8-bugbear
    'T10',    # flake8-debugger
    'T20',    # flake8-print
    'C4',     # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
    "B018",  # Found useless expression.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"authx/token.py" = ["C901"]
"authx/main.py" = ["B008"]
"authx/*" = ["D417"]
"tests/*" = ["D100","D101","D102","D103","D104","D107"]
"tests/utils.py" = ["B008"]
"tests/test_callback.py" = ["E712"]
"examples/*" = ["D100","D101","D102","D103","D104","D105","D107","D205","F841","T201"]

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "typing_extensions", "sqlalchemy"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.run]
source = ["authx"]
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    'authx/',
    '/Users/runner/work/authx/authx/authx/',
    'D:\a\authx\authx\authx',
]

[tool.coverage.report]
precision = 2
fail_under = 94
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
    'if CASUAL_UT',
]


[tool.mypy]
strict = true
warn_return_any = false
no_implicit_optional = false

[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]

[tool.codespell]
skip = '.git,env*,__pycache__,.venv'
ignore-words-list = 'ines,ser'
